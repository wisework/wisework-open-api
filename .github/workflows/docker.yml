name: Build Docker - Messaging

on:
  push:
    branches:
      - poc/aws
    tags:
      - '*'

env:
  DOTNET_VERSION: '6.0.x'
  REPOSITORY: wisework-openapi-v1
  IMAGE_NAME: ${{ github.repository }}
  NUGET_URL: https://nuget.pkg.github.com/WiseWork/index.json

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-1
          role-to-assume: arn:aws:iam::913431663817:role/GithubActionsRunner
          role-session-name: ghaWiseworkMsg

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg ENVIRONMENT=$ASPNETCORE_ENVIRONMENT \
            --build-arg NUGET_USERNAME=$NUGET_USERNAME \
            --build-arg NUGET_PASSWORD=$NUGET_PASSWORD \
            -t ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:latest .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:latest
        env:
          NUGET_USERNAME: ${{ secrets.GH_USER }}
          NUGET_PASSWORD: ${{ secrets.GH_PASSWORD }}
          ASPNETCORE_ENVIRONMENT: Development

      - name: Tag and push Docker image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          docker tag ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:${GITHUB_REF#refs/*/}
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:${GITHUB_REF#refs/*/}
        env:
          NUGET_USERNAME: ${{ secrets.GH_USER }}
          NUGET_PASSWORD: ${{ secrets.GH_PASSWORD }}
          ASPNETCORE_ENVIRONMENT: Development

  upload-helm-charts:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-1
          role-to-assume: arn:aws:iam::913431663817:role/GithubActionsRunner
          role-session-name: ghaWiseworkMessaging

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: azure/setup-helm@v3
        with:
           version: '3.10.0'
        id: install

      - name: Upload Helm Charts
        run: |
          aws sts get-caller-identity
          aws ecr get-login-password --region ${{ env.REGION }} \
            | helm registry login --username AWS --password-stdin ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ env.REGION }}.amazonaws.com
          helm package .helm
          helm push ${{ env.REPOSITORY }}-*.tgz oci://${{ steps.login-ecr.outputs.registry }}/
        env:
          AWS_ACCOUNT: 913431663817
          REGION: ap-southeast-1

  build-prod:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-1
          role-to-assume: arn:aws:iam::015392608953:role/GithubActionsRunner
          role-session-name: ghaWiseworkMsg

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg ENVIRONMENT=$ASPNETCORE_ENVIRONMENT \
            --build-arg NUGET_USERNAME=$NUGET_USERNAME \
            --build-arg NUGET_PASSWORD=$NUGET_PASSWORD \
            -t ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:latest .
          docker tag ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:${GITHUB_REF#refs/*/}
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:${GITHUB_REF#refs/*/}
        env:
          NUGET_USERNAME: ${{ secrets.GH_USER }}
          NUGET_PASSWORD: ${{ secrets.GH_PASSWORD }}
          ASPNETCORE_ENVIRONMENT: Development

  upload-helm-charts-prod:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-1
          role-to-assume: arn:aws:iam::015392608953:role/GithubActionsRunner
          role-session-name: ghaWiseworkMessaging

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: azure/setup-helm@v3
        with:
           version: '3.10.0'
        id: install

      - name: Upload Helm Charts
        run: |
          aws sts get-caller-identity
          aws ecr get-login-password --region ${{ env.REGION }} \
            | helm registry login --username AWS --password-stdin ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ env.REGION }}.amazonaws.com
          helm package .helm
          helm push ${{ env.REPOSITORY }}-*.tgz oci://${{ steps.login-ecr.outputs.registry }}/
        env:
          AWS_ACCOUNT: "015392608953"
          REGION: ap-southeast-1